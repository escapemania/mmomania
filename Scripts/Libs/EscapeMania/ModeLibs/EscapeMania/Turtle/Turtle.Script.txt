#Include "Libs/EscapeMania/ModeLibs/EscapeMania/MediaTracker/MediaTracker.Script.txt" as MediaTracker

#Const C_TestLandmarkTag "Turtle_Test"
#Const C_MediaTracker "Turtle"
#Const C_MediaTrackerPriority 3

declare Boolean[Text] G_InTurtle;
declare Boolean G_IsComplete;

Text[] GetHints() {
	declare Text[] Hints;
	if (G_IsComplete) {
		return Hints;
	}

	Hints.add("The next puzzle you want to solve is the four green slots.");
	Hints.add("Do you notice that it looks like an animal?");
	Hints.add("The animal is a turtle...");
	Hints.add("Have the four players go on the slots up-side down as if they were turtles!");
	Hints.add("<END>");

	return Hints;
}

Void CompletePuzzle() {
	G_IsComplete = True;
	
	// Tell players something is happening
	foreach (Player in Players) {
		MediaTracker::SetMediaTracker(Player, C_MediaTracker, C_MediaTrackerPriority);
		declare UI = UIManager.GetUI(Player);
		UI.QueueMessage(1000, 1, CUIConfig::EMessageDisplay::Big, "");
	}
}

Void Init() {
	G_IsComplete = False;
}

Void ResetPuzzle() {
	Init();
	
	foreach (Player in Players) {
		MediaTracker::UnsetMediaTracker(Player, C_MediaTrackerPriority);
	}
}

Boolean IsComplete() {
	return G_IsComplete;
}

Void OnEnterTest(CSmPlayer Player) {
	if (G_IsComplete) {
		return;
	}
	
	if (Player.UpDirection.Y < 0) {
		G_InTurtle[Player.User.Login] = True;
	}
	
	declare Integer countInTurtle = 0;
	foreach (PlayerLogin => InTurtle in G_InTurtle) {
		if (InTurtle) {
			countInTurtle += 1;
		}
	}
	
	if (countInTurtle == 4) {
		CompletePuzzle();
	} else {
		declare Text HintColor = "";
		if (G_InTurtle.get(Player.User.Login, False)) {
			HintColor = "$2f0";
		}
		declare UI = UIManager.GetUI(Player);
		UI.QueueMessage(1000, 1, CUIConfig::EMessageDisplay::Big, HintColor ^ "");
	}
}

Void OnLeaveTest(CSmPlayer Player) {
	G_InTurtle[Player.User.Login] = False;
}

Void OnRespawn(CSmPlayer Player) {
	OnLeaveTest(Player);
}

Void Loop() {
	foreach (Event in PendingEvents) {
		switch (Event.Type) {
			case CSmModeEvent::EType::OnPlayerTriggersWaypoint: {
				if (Event.Landmark.Tag == C_TestLandmarkTag) {
					OnEnterTest(Event.Player);
				} else {
					OnLeaveTest(Event.Player);
				}
			}
		}
	}
}
